name: dotnet build, test, pack, push to NuGet registry (using defaults)

on:
  workflow_call:
    inputs:
      project_or_solution:
        description: 'The project or solution file to build. If not specified, the action will look for a .sln or .csproj file in the root of the repository.'
        required: false
        type: string
      nuget_version:
        description: 'NuGet Version for the package'
        required: true
        type: string
      dotnet_assembly_version:
        description: '.NET Assembly Version'
        required: true
        type: string
      nuget_source:
        description: 'Package source (URL, UNC/folder path or package source name) to use.'
        required: false
        default: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        type: string
    secrets:
      nuget_api_key:
        required: true

jobs:
  build-test-pack-push:
    runs-on: ubuntu-latest
    name: Build, Test, Pack, Push
    permissions:
      checks: write # Needed for dorny/test-reporter
      contents: read
      packages: write
    env:
      nuget_api_key: ${{ secrets.nuget_api_key }}
    steps:
      - name: Require NuGet API Key
        if: ${{ env.nuget_api_key == '' }}
        run: |
          echo NuGet API key required 1>&2
          exit 1
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
      - name: Auth to GitHub NuGet registry
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      - name: Build
        run: dotnet build ${{ inputs.project_or_solution }} --configuration Release /p:Version=${{ inputs.dotnet_assembly_version }}
      - 
        env: ${{ secrets }}
        name: Test
        run: |
          env | dotnet test --configuration Release --no-build --  --filter-not-trait "TestType=EndToEnd" --report-xunit-trx --report-xunit-trx-filename NetChris-GitHub-Actions-test-results.trx
      - name: Test Report
        uses: dorny/test-reporter@v1.9.1
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: .NET tests
          path: "**/NetChris-GitHub-Actions-test-results.trx"
          reporter: dotnet-trx
          fail-on-empty: false
      - name: Paranoid NuGet package clean
        # For convenience we push *.nupkg later, so make sure the output folder is wiped, a paranoid move in case we re-use a runner?
        run: rm -rf ./nupkgs
      - name: Pack
        run: dotnet pack ${{ inputs.project_or_solution }} --configuration Release /p:PackageVersion=${{ inputs.nuget_version }} /p:Version=${{ inputs.dotnet_assembly_version }} --output ./nupkgs
      - name: Push
        run: dotnet nuget push ./nupkgs/*.nupkg --source ${{ inputs.nuget_source }} --api-key ${{ env.nuget_api_key }}
